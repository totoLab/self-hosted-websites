---
const GITHUB_USERNAME = 'totoLab';

let projects: any[] = [];
const proxyUrl = "https://api.antolab.xyz/github-totolab"
const keywordsToExclude: any[] = ["upptime", "projectBible", "studyMaterial", "automatic-tiktok-yt-channel", "ytSubs", "tomcat-axis2"];

try {
  // Fetch a limited number of projects at build time or during server rendering
  const response = await fetch(`${proxyUrl}/repos`);
  
  if (response.ok) {
    const allProjects = await response.json();
    if (Array.isArray(allProjects)) {
      projects = allProjects
        .filter(project =>
          !keywordsToExclude.some(keyword => project.name.includes(keyword))
        )
        .sort((a: any, b: any) => {
          if (b.stargazers_count !== a.stargazers_count) {
            return b.stargazers_count - a.stargazers_count;
          }
          if (b.forks_count !== a.forks_count) {
            return b.forks_count - a.forks_count;
          }
          const bDate = new Date(b.updated_at);
          const aDate = new Date(a.updated_at);
          if (bDate === aDate) return 0;
          return bDate > aDate ? 1 : -1;
        })
    } else {
      console.error('Unexpected format for projects data:', allProjects);
    }
  } else if (response.status === 403) {
    console.error('GitHub API rate limit exceeded.');
  } else {
    console.error('Failed to fetch projects:', response.status);
  }
} catch (error) {
  console.error('An error occurred while fetching projects:', error);
}
---

<section class="projects">
  <h2 class="section-title">Featured Projects</h2>
  <div class="projects-grid">
    {projects.length > 0 ? (
      projects.map(project => (
        <div class="project-card" key={project.id}>
          <h3 class="project-title">
            <a href={project.html_url} target="_blank" rel="noopener noreferrer">{project.name}</a>
          </h3>
          <p class="project-description">{project.description || 'No description available.'}</p>
          <div class="project-meta">
            <span>‚≠ê {project.stargazers_count}</span>
            <span>üç¥ {project.forks_count}</span>
          </div>
        </div>
      ))
    ) : (
      <p>No projects found or an error occurred.</p>
    )}
  </div>
</section>

<style>
  .projects {
    padding: 2rem;
    background-color: var(--background-light);
  }

  .section-title {
    font-size: 2rem;
    font-weight: 700;
    color: var(--text-primary);
    margin-bottom: 1.5rem;
    text-align: center;
  }

  .projects-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 1.5rem;
  }

  .project-card {
    background: var(--background-white);
    padding: 1.25rem;
    border: 1px solid var(--border-color);
    border-radius: var(--radius-default);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    transition: var(--transition-default);
  }

  .project-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }

  .project-title {
    font-size: 1.25rem;
    font-weight: 600;
    margin-bottom: 0.75rem;
  }

  .project-title a {
    text-decoration: none;
    color: var(--primary-color);
    transition: var(--transition-default);
  }

  .project-title a:hover {
    color: var(--secondary-color);
  }

  .project-description {
    font-size: 1rem;
    color: var(--text-secondary);
    margin-bottom: 1rem;
    line-height: 1.5;
  }

  .project-meta {
    display: flex;
    gap: 1rem;
    font-size: 0.875rem;
    color: var(--text-secondary);
  }

  @media (max-width: 768px) {
    .projects-grid {
      grid-template-columns: 1fr;
    }
    
    .section-title {
      font-size: 1.5rem;
    }
  }
</style>